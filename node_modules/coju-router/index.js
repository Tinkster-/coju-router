{

  function coju_router(coju) {
    this.routes = {
      "get": {},
      "post": {},
      "put": {},
      "head": {},
      "options": {}
    };
    this.data = '';
    this.cururl = null;

    coju.on('request', function coju_router_listener(req, res) {
      // We test this later
      this.cururl = req.url;

      // If any data was sent, capture it
      req.on('data', function(data) {
        this.data += data;
      }.bind(this));

      // Once the request is finished call our routes.
      req.on('end', function() {
        this.runHttpMethodQueue(req.method.toLowerCase(), req, res, this.data);
      }.bind(this));

    }.bind(this));
  }

  coju_router.prototype.runHttpMethodQueue = function(queue, req, res, data) {
    if (!this.routes.hasOwnProperty(queue)) {
      return null;
    }

    for (let r in this.routes[queue]) {
      let re = new RegExp('/^' + escape(r) + '$/');
      console.log('/^' + unescape(r) + '$/', r, this.cururl, re.test(r));
      if (re.test(r)) {
        this.routes[queue][r].forEach(function(ro) {
          //ro();
        });
      }
    }
  };

  coju_router.prototype.get = function(route, callback) {
    if (!this.routes.get.hasOwnProperty(route)) {
      this.routes.get[route] = [];
    }

    this.routes.get[route].push(callback);
    return this;
  };

  module.exports = function(coju) {
    return new coju_router(coju);
  };
}